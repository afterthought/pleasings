
package_name = package_name()
def make_package_dist(labels:list=[], visibility:list=None):
  package_json = filegroup(
    name = f"package-json",
    srcs = glob(["package.json", "packages/**/package.json"]),
    visibility = visibility
  )
  package_lock_json = filegroup(
    name = f"package-json-lock",
    srcs = ["package-lock.json"],
    visibility = visibility
  )
  # This copy of files can be updated during semantic process without invalidating the node_modules
  semantic_package = genrule(
    name = f"semantic-package",
    srcs = ["packages"],
    cmd = f"""
set -e 
mkdir -p $OUTS

cp -a $PKG/* $OUTS/
""",
    outs = ["_semantic"]
  )

  deps = genrule(
    name = f"deps",
    srcs = [package_json, package_lock_json],
    labels = ["npm"] + labels,
    cmd = f"""
set -e 
mkdir -p $OUTS

cp -a $PKG/* $OUTS/
(cd $OUTS && npm ci)

""",
    pass_env = ["NPM_CONFIG_CACHE", "NODE_AUTH_TOKEN"], # This should be set in environment to speed up builds: export NPM_CONFIG_CACHE=$(npm config get cache)
    outs = ["_deps"]
  )

  return genrule(
    name = f"dist",
    srcs =  [deps, semantic_package],
    labels = ["npm"] + labels,
    cmd = f"""
set -e 
mkdir -p $OUTS
root=$(pwd)
cp -a $PKG/_deps/* $OUTS/

cd $PKG/_semantic
for package in packages/**; 
  do 
    cp -a $package/* $root/$OUTS/$package
  done
cd $root
(cd $OUTS && npm run dist --workspaces --if-present)
""",
    outs = ["_dist"],
    visibility = visibility
  )


def make_package_build(npm_package_name:str, dist:str, deps:list=[], labels:list=[], visibility:list=None):
  genrule(
    name = f"{npm_package_name}-build",
    deps = [dist] + deps,
    labels = ["npm", "npm-build"] + labels,
    srcs = [dist],
    cmd = [
      f"export OUT_DIR=$(pwd)/$OUTS",
      f"(cd $PKG/_dist && npm run build -w packages/{npm_package_name})"
    ],
    outs = [f"{npm_package_name}#dist"],
    visibility = visibility
  )

